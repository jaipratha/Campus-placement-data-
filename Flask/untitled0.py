# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ROlaUbHp2WLQZ-Jpjw8ILE9TuaPVrzO
"""

import numpy as np
import pandas as pd
import os

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
from sklearn.model_selection import cross_val_score
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import joblib
from sklearn.metrics import accuracy_score

df = pd.read_csv(r"/content/collegePlace.csv")
df.head()

df.info()

df.isnull().sum()

def transformationplot(feature):
  plt.figure(figsize=(12,5))
  plt.subplot(1,2,1)
  sns.distplot(feature)
  transformationplot(np.log(df['Age']))

@app.route('/')
def hello():
   return render_template("index.html")

from flask import Flask, render_template , request
app=Flask(__name__)
import pickle
import joblib
model=pickle.load(open("placement123.pkl",'rb'))
ct=joblib.load('placement')

best_k={“Regular”:0}
best_score={“Regular”:0}
for k in range{3,50,2};
           ## Using Regular training set
           Knn_temp = KneighborsClassifier(n_neighbors=k)
           Knn_temp_fit(x_train, Y_train)
           Knn_temp_pred – knn_temp.predict(x_test)
          Score – metrics.accuracy_score(Y_test, knn_temp_pred) * 100
          if score >=best_score[“Regular”] and score < 100:
                   best_score[“Regular”] = score 
                    best_k[“Regular”] = k

print(“---Results---\nk: {}\nscore: {}”.format(best_k, best_score))
## Instantiate the models
Knn = KneighborsClassifier(n_neighbors=best_k[“Regular”])
## Fit the model to the training set
Knn.fit(X_train, Y_test)
Knn_pred – knn.predict(X_test)
Tested = accuracy_score(knn_pred, Y_test)